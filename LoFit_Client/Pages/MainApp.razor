@using LoFit_Models.Dtos
@using LoFit_Models.MockupData

@switch(LoFitSpaEngine.GetCurrentStateName())
{
    case SpaEngineStatesEnum.Init:
        <AppInit @rendermode="InteractiveAuto" OnClickCallback="StartTraining"/>
        break;

    case SpaEngineStatesEnum.ListTrainings:
        <ListTrainings @rendermode="InteractiveAuto" userTrainingsList="UserTrainingsList" StartTrainingSetCallback="StartTrainingSet"  AddNewTrainingSetCallback="AddNewTrainingSet"/>
        break;

    case SpaEngineStatesEnum.Training:
        <Training @rendermode="InteractiveAuto" FinishTrainingCallback="FinishTraining"/>
        break;

    case SpaEngineStatesEnum.AddTraining:
        <AddTraining @rendermode="InteractiveAuto" SaveNewTrainingCallback="SaveNewTraining"/>
        break;

    case SpaEngineStatesEnum.Summary:
        <Summary @rendermode="InteractiveAuto" ReturnToInitCallback="ReturnToInit"/>
        break;
    default:
        <h1>Error</h1>
        break;
}

@code{
    public ISpaEngineService LoFitSpaEngine = null;
    //[Inject]
    //public ITrainingService trainingService {get; set;}
    public IEnumerable<TrainingSetDto> UserTrainingsList {get; set;} 

    
    protected override void OnInitialized()
    {
        this.LoFitSpaEngine =  new SpaEngineService();
    } 

    public async Task StartTraining()
    {
        LoFitSpaEngine.StartTraining();
        //userTrainingsList = await trainingService.ListTrainingsAsync();
        UserTrainingsList = await MockupData.MockUpListTrainingsAsync();
    }
    public async Task AddNewTrainingSet()
    {
        //TODO - add implementation and state transition
        LoFitSpaEngine.AddNewTrainingSet();

    }
    
    public async Task SaveNewTraining(TrainingSetDto newTrainingSet)
    {
        LoFitSpaEngine.SaveNewTraining();
        //Implement sending new value to db
    }

    public async Task StartTrainingSet(TrainingSetDto trainingSet)
    {
        LoFitSpaEngine.StartTrainingSet();
    }

    public async Task FinishTraining()
    {
        LoFitSpaEngine.FinishTraining();
    }

    public async Task ReturnToInit()
    {
        LoFitSpaEngine.ReturnToInit();
    }
    
}   


